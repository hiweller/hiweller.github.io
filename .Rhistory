# histograms are more consistent:
img_hist <- getImageHist(img, bins = bins,
lower = NULL,
plotting = FALSE)
scatter3dclusters(img_hist, scaling = 50)
# this looks so terrible because the yellow and green patches
# get merged...alas
img_hist_lab <- getLabHist(img, bins = bins,
lower = NULL, ref.white = "D65",
plotting = FALSE)
scatter3dclusters(img_hist_lab,
color.space = "lab",
scaling = 50)
# IMO:
# 1. would be nice to have both of these as options, but
#    if it has to be one I would go with histograms, since it's consistent
# 2. recolored image should match the clustering method/parameters:
recolored <- recolorize(img,
method = method,
bins = bins,
n = n,
plotting = FALSE)
# for plotting:
par(mar = rep(0, 4))
plotImageArray(recolored$recolored_img)
plotColorPalette(recolored$centers,
recolored$sizes, horiz = FALSE)
plotImageArray(recolored$recolored_img, main = "Recolored")
plotColorPalette(recolored$centers,
recolored$sizes, horiz = FALSE)
# We can also make these:
layout(matrix(1:8, nrow = 2))
layers <- splitByColor(recolored, plot_method = "overlay")
# or:
layers <- splitByColor(recolored, plot_method = "color")
fish <- "~/Dropbox/color/demo/images/fish/Chaetodon_Chaetodon_wiebeli_532247427.png"
fit1 <- recolorize(fish, resize = 0.5)
library(recolorize)
fit1 <- recolorize(fish, resize = 0.5)
fish <- "~/Dropbox/color/demo/images/fish/Pomacanthus_Pomacanthus imperator_-1184094044.png"
fit1 <- recolorize(fish, resize = 0.5)
fit1 <- recolorize(fish, resize = 0.5, bins = 3)
fit2 <- recluster(fish, similarity_cutoff = 30)
fit2 <- recluster(fit1, similarity_cutoff = 30)
fit2 <- recluster(fit1, similarity_cutoff = 50)
fit2 <- recluster(fit1, similarity_cutoff = 40)
fit3 <- mergeLayers(fit2, list(c(1, 3, 5)))
fit3 <- mergeLayers(fit2, list(c(1, 3)))
fit3 <- mergeLayers(fit2, list(c(1, 3), c(5, 7)))
fit3 <- mergeLayers(fit2,
list(c(1, 3), c(5, 7)),
color_to = fit2$centers[c(3, 7), ])
plot(fit3)
fit3 <- mergeLayers(fit2,
list(c(5, 7)),
color_to = fit2$centers[c(7), ])
fit3 <- mergeLayers(fit2,
list(c(1, 3), c(5, 7)),
color_to = fit2$centers[c(3, 7), ])
plot(fit3)
?mergeLayers
fit3 <- mergeLayers(fit2,
list(c(1, 3), c(5, 7)),
color_to = c("weighted average",
fit2$centers[7, ]))
fit3 <- mergeLayers(fit2,
list(c(1, 3), c(5, 7)),
color_to = c("weighted average",
rgb(fit2$centers[7, ])))
rgb(fit2$centers[7, ])
rgb(fit2$centers[7, ])
fit2$centers[7,]
rgb(0.89381, .75881, 0.38431, maxColorValue = 1)
fit3 <- mergeLayers(fit2,
list(c(1, 3), c(5, 7)),
color_to = c("weighted average",
"#E4C162"))
plot(fit3)
fit3 <- mergeLayers(fit2,
list( c(5, 7)),
color_to = c("#E4C162"))
rgb(fit3$centers[-1,])
layout(1:3, heights = c(0.7, 0.15, 0.15))
plotImageArray(fit3$recolored_img)
plotColorPalette(fit3$centers[-1,], cex_text = 0)
plotColorPalette(t(col2rgb(rep("white", 5)) / 255), cex_text = 0)
text(x = 0:4 + 0.5, y = 0.5,
col = rgb(fit3$centers[-1,]),
font = 2, cex = 1.2,
labels = rep("bisque", 5))
text(x = 0:4 + 0.5, y = 0.5,
col = rgb(fit3$centers[-1,]),
font = 2, cex = 3,
labels = rep("bisque", 5))
fit1 <- recolorize(fish, bins = 3)
fit2 <- recluster(fit1, similarity_cutoff = 40)
fit3 <- mergeLayers(fit2,
list( c(5, 7)),
color_to = c("#E4C162"))
fit3 <- mergeLayers(fit2,
list( c(4, 7)),
color_to = c("#E4C162"))
fit1 <- recolorize(fish, bins = 3)
fit1 <- recluster(fit1, similarity_cutoff = 40)
fit1 <- mergeLayers(fit1,
list(c(2, 5), c(4, 7)),
color_to = c("weighted average", "#E4C162"))
layout(1:3, heights = c(0.7, 0.15, 0.15))
plotImageArray(fit1$recolored_img)
plotColorPalette(fit1$centers[-1,], cex_text = 0)
plotColorPalette(fit1$centers, cex_text = 0)
layout(1:3, heights = c(0.7, 0.15, 0.15))
plotImageArray(fit1$recolored_img)
plotColorPalette(fit1$centers, cex_text = 0)
plotColorPalette(t(col2rgb(rep("white", 5)) / 255), cex_text = 0)
text(x = 0:4 + 0.5, y = 0.5,
col = rgb(fit3$centers[-1,]),
font = 2, cex = 3,
labels = rep("bisque", 5))
fit1 <- recolorize(fish, bins = 3)
fit1 <- recluster(fit1, similarity_cutoff = 40)
fit1 <- mergeLayers(fit1,
list(c(4, 7)),
color_to = c("#E4C162"))
layout(1:3, heights = c(0.7, 0.15, 0.15))
plotImageArray(fit1$recolored_img)
plotColorPalette(fit1$centers[-4], cex_text = 0)
plotColorPalette(fit1$centers[-4, ], cex_text = 0)
plotColorPalette(t(col2rgb(rep("white", 5)) / 255), cex_text = 0)
text(x = 0:4 + 0.5, y = 0.5,
col = rgb(fit3$centers[-1,]),
font = 2, cex = 3,
labels = c("bisque", "bisque", "bisque",
"UCLA\nblue", "bisque"))
layout(1:3, heights = c(0.6, 0.2, 0.2))
plotImageArray(fit1$recolored_img)
plotColorPalette(fit1$centers[-4, ], cex_text = 0)
plotColorPalette(t(col2rgb(rep("white", 5)) / 255), cex_text = 0)
text(x = 0:4 + 0.5, y = 0.5,
col = rgb(fit3$centers[-1,]),
font = 2, cex = 3,
labels = c("bisque", "bisque", "bisque",
"UCLA\nblue", "bisque"))
layout(1:3, heights = c(0.8, 0.1, 0.1))
plotImageArray(fit1$recolored_img)
plotColorPalette(fit1$centers[-4, ], cex_text = 0)
plotColorPalette(t(col2rgb(rep("white", 5)) / 255), cex_text = 0)
text(x = 0:4 + 0.5, y = 0.5,
col = rgb(fit3$centers[-1,]),
font = 2, cex = 3,
labels = c("bisque", "bisque", "bisque",
"UCLA\nblue", "bisque"))
layout(1:3, heights = c(0.7, 0.15, 0.15))
plotImageArray(fit1$recolored_img)
plotColorPalette(fit1$centers[-4, ], cex_text = 0)
plotColorPalette(t(col2rgb(rep("white", 5)) / 255), cex_text = 0)
text(x = 0:4 + 0.5, y = 0.5,
col = rgb(fit3$centers[-1,]),
font = 2, cex = 3,
labels = c("bisque", "bisque", "bisque",
"UCLA\nblue", "bisque"))
layout(1:3, heights = c(0.6, 0.2, 0.2))
plotImageArray(fit1$recolored_img)
plotColorPalette(fit1$centers[-4, ], cex_text = 0)
plotColorPalette(t(col2rgb(rep("white", 5)) / 255), cex_text = 0)
text(x = 0:4 + 0.5, y = 0.5,
col = rgb(fit3$centers[-4,]),
font = 2, cex = 3,
labels = c("bisque", "bisque", "bisque",
"UCLA\nblue", "bisque"))
layout(1:3, heights = c(0.6, 0.2, 0.2))
plotImageArray(fit1$recolored_img)
plotColorPalette(fit1$centers[-4, ], cex_text = 0)
plotColorPalette(t(col2rgb(rep("white", 5)) / 255), cex_text = 0)
text(x = 0:4 + 0.5, y = 0.5,
col = rgb(fit3$centers[-4,]),
font = 2, cex = 5,
labels = c("bisque", "bisque", "bisque",
"UCLA\nblue", "bisque"))
layout(1:3, heights = c(0.2, 0.2, 0.6))
plotColorPalette(fit1$centers[-4, ], cex_text = 0)
plotColorPalette(t(col2rgb(rep("white", 5)) / 255), cex_text = 0)
text(x = 0:4 + 0.5, y = 0.5,
col = rgb(fit3$centers[-4,]),
font = 2, cex = 4,
labels = c("bisque", "bisque", "bisque",
"UCLA\nblue", "bisque"))
plotImageArray(fit1$recolored_img)
layout(1:3, heights = c(0.2, 0.6, 0.2))
plotColorPalette(fit1$centers[-4, ], cex_text = 0)
plotImageArray(fit1$recolored_img)
plotColorPalette(t(col2rgb(rep("white", 5)) / 255), cex_text = 0)
text(x = 0:4 + 0.5, y = 0.5,
col = rgb(fit3$centers[-4,]),
font = 2, cex = 4,
labels = c("bisque", "bisque", "bisque",
"UCLA\nblue", "bisque"))
layout(1:3, heights = c(0.2, 0.6, 0.2))
plotColorPalette(fit1$centers[-4, ], cex_text = 0)
plotImageArray(fit1$recolored_img)
plotColorPalette(t(col2rgb(rep("white", 5)) / 255), cex_text = 0)
text(x = 0:4 + 0.5, y = 0.5,
col = rgb(fit3$centers[-4,]),
font = 2, cex = 4,
labels = c("bisque", "bisque", "bisque",
"UCLA\nblue", "bisque"))
layout(1:3, heights = c(0.2, 0.6, 0.2))
par(mar = c(5, 1, 0, 1))
plotColorPalette(fit1$centers[-4, ], cex_text = 0)
par(mar = rep(0, 4))
plotImageArray(fit1$recolored_img)
par(mar = rep(0, 4))
plotColorPalette(t(col2rgb(rep("white", 5)) / 255), cex_text = 0)
text(x = 0:4 + 0.5, y = 0.5, pos = 3,
col = rgb(fit3$centers[-4,]),
font = 2, cex = 4,
labels = c("bisque", "bisque", "bisque",
"UCLA\nblue", "bisque"))
layout(1:3, heights = c(0.2, 0.6, 0.2))
par(mar = c(0, 1, 5, 1))
plotColorPalette(fit1$centers[-4, ], cex_text = 0)
par(mar = rep(0, 4))
plotImageArray(fit1$recolored_img)
par(mar = rep(0, 4))
plotColorPalette(t(col2rgb(rep("white", 5)) / 255), cex_text = 0)
text(x = 0:4 + 0.5, y = 0.5,
col = rgb(fit3$centers[-4,]),
font = 2, cex = 4,
labels = c("bisque", "bisque", "bisque",
"UCLA\nblue", "bisque"))
layout(matrix(c(1:3), 1),
widths = c(0.7, 0.1, 0.2))
par(mar = rep(0, 4))
plotImageArray(fit1$recolored_img)
par(mar = c(1, 1, 1, 1))
plotColorPalette(fit1$centers[-4, ],
cex_text = 0, horiz = F)
par(mar = rep(0, 4))
plotColorPalette(t(col2rgb(rep("white", 5)) / 255), cex_text = 0)
text(x = 0:4 + 0.5, y = 0.5,
col = rgb(fit3$centers[-4,]),
font = 2, cex = 4,
labels = c("bisque", "bisque", "bisque",
"UCLA\nblue", "bisque"))
{layout(matrix(c(1:3), 1),
widths = c(0.7, 0.1, 0.2))
par(mar = rep(0, 4))
plotImageArray(fit1$recolored_img)
par(mar = c(1, 1, 1, 1))
plotColorPalette(fit1$centers[-4, ],
cex_text = 0, horiz = F)
par(mar = rep(0, 4))
plotColorPalette(t(col2rgb(rep("white", 5)) / 255), cex_text = 0)
text(y = 0:4 + 0.5, x = 0.5,
col = rgb(fit3$centers[-4,]),
font = 2, cex = 4,
labels = c("bisque", "bisque", "bisque",
"UCLA\nblue", "bisque"))}
text(y = 0:4 + 0.5, x = 1,
col = rgb(fit3$centers[-4,]),
font = 2, cex = 4,
labels = c("bisque", "bisque", "bisque",
"UCLA\nblue", "bisque"))}
text(y = 0:4 + 0.5, x = 1,
col = rgb(fit3$centers[-4,]),
font = 2, cex = 4,
labels = c("bisque", "bisque", "bisque",
"UCLA\nblue", "bisque"))
text(y = 0:4 + 0.5, x = 2,
col = rgb(fit3$centers[-4,]),
font = 2, cex = 4,
labels = c("bisque", "bisque", "bisque",
"UCLA\nblue", "bisque"))
axis(2)
text(y = (0:4 + 0.5)/4, x = 2,
col = rgb(fit3$centers[-4,]),
font = 2, cex = 4,
labels = c("bisque", "bisque", "bisque",
"UCLA\nblue", "bisque"))
text(y = c(.1, .3, .5, .7. .9), x = 2,
col = rgb(fit3$centers[-4,]),
font = 2, cex = 4,
labels = c("bisque", "bisque", "bisque",
"UCLA\nblue", "bisque"))
text(y = c(.1, .3, .5, .7, .9), x = 2,
col = rgb(fit3$centers[-4,]),
font = 2, cex = 4,
labels = c("bisque", "bisque", "bisque",
"UCLA\nblue", "bisque"))
{layout(matrix(c(1:3), 1),
widths = c(0.7, 0.1, 0.2))
par(mar = rep(0, 4))
plotImageArray(fit1$recolored_img)
par(mar = c(1, 1, 1, 1))
plotColorPalette(fit1$centers[-4, ],
cex_text = 0, horiz = F)
par(mar = rep(0, 4))
plotColorPalette(t(col2rgb(rep("white", 5)) / 255), cex_text = 0)
text(y = c(.1, .3, .5, .7, .9), x = 2,
col = rgb(fit3$centers[-4,]),
font = 2, cex = 4,
labels = c("bisque", "bisque", "bisque",
"UCLA\nblue", "bisque"))
axis(2)
}
{layout(matrix(c(1:3), 1),
widths = c(0.7, 0.1, 0.2))
par(mar = rep(0, 4))
plotImageArray(fit1$recolored_img)
par(mar = c(1, 1, 1, 1))
plotColorPalette(fit1$centers[-4, ],
cex_text = 0, horiz = F)
par(mar = rep(0, 4))
plotColorPalette(t(col2rgb(rep("white", 5)) / 255), cex_text = 0)
text(y = c(.1, .3, .5, .7, .9), x = 2,
col = rgb(fit3$centers[-4,]),
font = 2, cex = 4,
labels = c("bisque", "bisque", "bisque",
"UCLA\nblue", "bisque"))
}
fish <- "~/Dropbox/color/demo/images/fish/Pomacanthus_Pomacanthus imperator_-1184094044.png"
fit1 <- recolorize(fish, bins = 3)
library(recolorize)
fish <- "~/Dropbox/color/demo/images/fish/Pomacanthus_Pomacanthus imperator_-1184094044.png"
fit1 <- recolorize(fish, bins = 3)
fit1 <- recolorize(fish, resize = 0.25, bins = 3)
library(recolorize)
fish <- "~/Dropbox/color/demo/images/fish/Pomacanthus_Pomacanthus imperator_-1184094044.png"
fit1 <- recolorize(fish, resize = 0.25, bins = 3)
img <- system.file("extdata/corbetti.png", package = "recolorize")
fit1 <- recolorize(img)
fit2 <- recluster(fit1, similarity_cutoff = 45)
layers <- splitByColor(fit2)
test <- imager::contours(layers[[1]] > 0)
library(recolorize)
library(imager)
test <- contours(as.pixset(layers[[1]] > 0))
test <- contours(as.pixset(layers[[1]]) > 0)
test <- contours(recolorize:::array_to_cimg(layers[[1]]) > 0)
recolorize:::array_to_cimg(layers[[1]])
recolorize:::array_to_cimg(layers[[1]])
as.cimg(layers[[1]])
test <- contours(as.cimg(layers[[1]]) > 0)
plot(test)
test
px <- as.cimg(layers[[1]]) > 0
plot(px)
px <- as.cimg(layers[[4]]) > 0
test <- contours(px)
plot(px)
px <- clean(px, 2)
plot(px)
plot(test)
highlight(px)
summary(test)
px <- as.cimg(layers[[4]]) > 0
px <- clean(px, 2)
test <- contours(px)
plot(px)
summary(test)
highlight(px)
test2 <- sf::st_multipolygon(test)
?sf::st_polygon
(p1 = st_point(c(1,2)))
class(p1)
library(sf)
(p1 = st_point(c(1,2)))
class(p1)
(p2 = st_point(c(1,2,3)))
class(p2)
(p1 = st_point(c(1,2)))
class(p1)
st_bbox(p1)
(p2 = st_point(c(1,2,3)))
class(p2)
(p3 = st_point(c(1,2,3), "XYM"))
pts = matrix(1:10, , 2)
(mp1 = st_multipoint(pts))
pts = matrix(1:15, , 3)
(mp2 = st_multipoint(pts))
(mp3 = st_multipoint(pts, "XYM"))
pts = matrix(1:20, , 4)
(mp4 = st_multipoint(pts))
pts = matrix(1:10, , 2)
(ls1 = st_linestring(pts))
pts = matrix(1:15, , 3)
(ls2 = st_linestring(pts))
(ls3 = st_linestring(pts, "XYM"))
pts = matrix(1:20, , 4)
(ls4 = st_linestring(pts))
outer = matrix(c(0,0,10,0,10,10,0,10,0,0),ncol=2, byrow=TRUE)
hole1 = matrix(c(1,1,1,2,2,2,2,1,1,1),ncol=2, byrow=TRUE)
hole2 = matrix(c(5,5,5,6,6,6,6,5,5,5),ncol=2, byrow=TRUE)
pts = list(outer, hole1, hole2)
(ml1 = st_multilinestring(pts))
pts3 = lapply(pts, function(x) cbind(x, 0))
(ml2 = st_multilinestring(pts3))
(ml3 = st_multilinestring(pts3, "XYM"))
pts4 = lapply(pts3, function(x) cbind(x, 0))
(ml4 = st_multilinestring(pts4))
outer = matrix(c(0,0,10,0,10,10,0,10,0,0),ncol=2, byrow=TRUE)
hole1 = matrix(c(1,1,1,2,2,2,2,1,1,1),ncol=2, byrow=TRUE)
hole2 = matrix(c(5,5,5,6,6,6,6,5,5,5),ncol=2, byrow=TRUE)
pts = list(outer, hole1, hole2)
(pl1 = st_polygon(pts))
pts3 = lapply(pts, function(x) cbind(x, 0))
(pl2 = st_polygon(pts3))
(pl3 = st_polygon(pts3, "XYM"))
pts4 = lapply(pts3, function(x) cbind(x, 0))
(pl4 = st_polygon(pts4))
pol1 = list(outer, hole1, hole2)
pol2 = list(outer + 12, hole1 + 12)
pol3 = list(outer + 24)
mp = list(pol1,pol2,pol3)
(mp1 = st_multipolygon(mp))
pts3 = lapply(mp, function(x) lapply(x, function(y) cbind(y, 0)))
(mp2 = st_multipolygon(pts3))
(mp3 = st_multipolygon(pts3, "XYM"))
pts4 = lapply(mp2, function(x) lapply(x, function(y) cbind(y, 0)))
(mp4 = st_multipolygon(pts4))
(gc = st_geometrycollection(list(p1, ls1, pl1, mp1)))
st_geometrycollection() # empty geometry
c(st_point(1:2), st_point(5:6))
c(st_point(1:2), st_multipoint(matrix(5:8,2)))
c(st_multipoint(matrix(1:4,2)), st_multipoint(matrix(5:8,2)))
c(st_linestring(matrix(1:6,3)), st_linestring(matrix(11:16,3)))
c(st_multilinestring(list(matrix(1:6,3))), st_multilinestring(list(matrix(11:16,3))))
pl = list(rbind(c(0,0), c(1,0), c(1,1), c(0,1), c(0,0)))
c(st_polygon(pl), st_polygon(pl))
c(st_polygon(pl), st_multipolygon(list(pl)))
c(st_linestring(matrix(1:6,3)), st_point(1:2))
c(st_geometrycollection(list(st_point(1:2), st_linestring(matrix(1:6,3)))),
st_geometrycollection(list(st_multilinestring(list(matrix(11:16,3))))))
c(st_geometrycollection(list(st_point(1:2), st_linestring(matrix(1:6,3)))),
st_multilinestring(list(matrix(11:16,3))), st_point(5:6),
st_geometrycollection(list(st_point(10:11))))
pts4
(mp2 = st_multipolygon(pts3))
plot(mp2)
ppts
pts3
test
pts3
library(recolorize)
library(imager)
#install.packages("MASS") #for data simulation
library(MASS)
#get covariance matrix
#covariance of 0.90
covmat <- matrix(c(10, 8,
8, 10), nrow = 2)
a <- mvrnorm(n = 15, mu = c(6, 6), covmat) #bivariate data
b <- mvrnorm(n = 15, mu = c(7, 5), covmat) #bivariate data
c <- mvrnorm(n = 15, mu = c(8, 4), covmat) #bivariate data
a
colnames(a) <- c("L", "W") #name two traits
colnames(b) <- c("L", "W")
colnames(c) <- c("L", "W")
a
gps <- factor(c(rep("Gigantocypris", 15), rep("lil' lobe fins", 15), rep("Mini ature", 15)))
dat <- data.frame(L = c(a[,1], b[,1], c[,1]),
W = c(a[,2], b[,2], c[,2]),
gps = gps)
boxplot(dat$L ~ gps) #overlapping distributions
boxplot(dat$W ~ gps) #overlapping distributions
plot(rbind(a, b, c), col = c(rep("black", 15), rep("gray52", 15), rep("blue", 15))) #correlated traits
legend(x="bottomright", legend = levels(gps), fill = c("black", "gray52", "blue"))
anova(lm(W ~ gps, data = dat))
anova(lm(L ~ gps, data = dat))
anova(manova(cbind(W,L)~gps, data = dat)) #detects multivariate difference in means, nominal type I error
weights <- c(0.83, 0.99, 0.91,
1.08, 1.08, 1.09,
0.77, 1.15, 1.11,
1.16, 0.14, 0.24,
0.64, 1.17, 1.08,
0.92, 0.31, 0.46)
clay_density <- data.frame(weights = c(0.83, 0.99, 0.91,
1.08, 1.08, 1.09,
0.77, 1.15, 1.11,
1.16, 0.14, 0.24,
0.64, 1.17, 1.08,
0.92, 0.31, 0.46),
volumes = c(0.7, 0.6, 0.6,
0.6, 0.6, 0.7,
0.4, 0.6, 0.6,
0.7, 0.1, 0.15,
0.4, 0.7, 0.6,
0.5, 0.2, 0.25))
plot(clay_density)
mean(clay_density$weights)
mean(clay_density$volumes)
0.84/0.5
lm(data = clay_density, weights ~ vols)
lm(data = clay_density, weights ~ volumes)
x <- seq(0, 5, by = 0.1)
y <- seq(0, 5, by = 0.1)
(0.9*x + 2*y) / sum(x, y)
vignette('Raster')
vignette('Raster', package = raster)
?raster
vignette(package = "raster")
library(raster)
r <- raster(ncol=10, nrow=10)
values(r) <- sample(0:255, ncell(r), replace=TRUE)
ctab <- sample(rainbow(256))
colortable(r) <- ctab
plot(r)
head(colortable(r))
setwd("~/Dropbox/professional/hiweller.github.io/")
usethis::create_project()
blogdown::new_site(theme = "wowchemy/starter-academic")
blogdown:::serve_site()
